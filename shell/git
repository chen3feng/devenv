# Git branch in prompt.
parse_git_branch() {
    LC_ALL=C git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

if [ -n "$BASH_VERSION" ]; then

    # Adaptive command line prompt.
    prompt_command() {
        local login_info
        if [[ $COLUMNS -lt 100 ]]; then
            export PROMPT_DIRTRIM=1
        elif [[ $COLUMNS -lt 150 ]]; then
            export PROMPT_DIRTRIM=2
        else
            export PROMPT_DIRTRIM=0
            login_info="\u@\h "
        fi
        export PS1="$login_info\w\[\033[32m\]\$(parse_git_branch)\[\033[00m\] $ "
    }

    PROMPT_COMMAND=prompt_command

elif [ -n "$ZSH_VERSION" ]; then

    # zsh 5.8 disabled this option defaultly,
    # see https://github.com/advisories/GHSA-735j-r9q6-48mw
    setopt PROMPT_SUBST

    # Adaptive command line prompt.
    shorten_prompt() {
        if [[ $COLUMNS -lt 100 ]]; then
            echo '4~|.../%1~|%~'
        elif [[ $COLUMNS -lt 150 ]]; then
            echo '4~|.../%2~|%~'
        else
            echo '5~|%-2~/â€¦/%3~|%4~'
        fi
    }

    # Using shorter prompt in vscode terminal
    export PS1=$'%($(shorten_prompt))\e[32m$(parse_git_branch)\e[m%# '

    # Ohyyzsh beceme too slow in large git repository,
    # See https://github.com/ohmyzsh/ohmyzsh/issues/3009
    if [[ $ZSH =~ .*\.oh-my-zsh ]]; then
        git config --global --add oh-my-zsh.hide-dirty 1
        git config --global --add oh-my-zsh.hide-status 1
    fi

fi
